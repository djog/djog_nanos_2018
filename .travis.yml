language: cpp
dist: xenial
compiler: gcc

addons: 
  apt: 
    packages: libboost-all-dev

before_install:
  # C++14
  #- sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  #- sudo apt-get update -qq

install: 
  # C++14
  #- sudo apt-get install -qq g++-6
  #- sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 90
  # Qt5
  - sudo apt-get install -qq qt5-qmake qt5-default
  #- sudo apt-get install -qq libqt5webkit5-dev qtdeclarative5-dev libqt5svg5*
  #- export QMAKE=/usr/lib/x86_64-linux-gnu/qt5/bin/qmake
  # Qt5 SVG
  #- sudo apt-get install libqt5svg5-dev
  # SFML
  #- sudo apt-get install libsfml-dev
  # XRandR, else you get 'Failed to use the XRandR extension while trying to get the desktop video modes'
  #- sudo apt-get install libxrandr-dev
  # clang-tidy
  #- sudo apt-get install -qq clang-3.8
  # cppcheck
  - sudo apt-get install -qq cppcheck
  # Codecov
  - sudo pip install codecov
  # OCLint
  - ./install_oclint
  # For the virtual X server
  #- sudo apt-get install libxrandr-dev
  # valgrind, for helgrind and memcheck
  #- sudo apt-get install -qq valgrind
  # SLOCcount
  #- sudo apt-get install sloccount

# Xenial
services:
  - xvfb

script: 
  # Bouw het project
  - qmake -qt=qt5 djog_nanos_2018.pro
  - make --silent debug
  # Run het een beetje
  - ./djog_nanos_2018 --versie
  # cppcheck
  - cppcheck --error-exitcode=1 . 
  # Get code coverage
  - ./get_code_cov
  - codecov
  # Call OCLint
  - ./do_oclint

after_success:
  # Codecov
  - bash <(curl -s https://codecov.io/bash)
